package proxy.common.converter;

import java.io.IOException;
import java.nio.charset.StandardCharsets;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.node.NullNode;
import com.google.protobuf.Message;
import com.google.protobuf.util.JsonFormat;

import proxy.common.exception.ProxyException;
import proxy.common.exception.resource.Errors;
import lombok.extern.slf4j.Slf4j;

/**
 * Conversion of PROTOBUF -> JSON
 */
@Slf4j
public class ProtobufConverter implements SchemaConverter {
    private final ObjectMapper objectMapper = new ObjectMapper();

    @Override
    public JsonNodeAndSize toJson(Object value) {
        try {
            byte[] bytes = convert((Message) value);
            // 바이트 값이 없는 경우, 빈 객체 반환
            if (bytes == null) {
                return new JsonNodeAndSize(NullNode.getInstance(), 0);
            }
            // JsonNode로 표현된 데이터 & 바이트 사이즈 맵핑
            return new JsonNodeAndSize(objectMapper.readTree(bytes), bytes.length);

        } catch (IOException e) {
            log.error("Jackson failed to deserialize JSON generated by Protobuf's JSON encoder: ", e);
            throw new ProxyException(Errors.PROTOBUF_TO_JSON_FAILED, e.getMessage());
        } catch (RuntimeException e) {
            log.error("Unexpected exception converting Protobuf to JSON: ", e);
            throw new ProxyException(Errors.PROTOBUF_TO_JSON_FAILED, e.getMessage());
        }
    }

    /**
     * convert Object -> byte[]
     * @param value
     * @return
     * @throws IOException
     */
    private byte[] convert(Message message) throws IOException {
        if (message == null) return null;

        // Message -> byte[]
        String jsonString = JsonFormat.printer()
            .includingDefaultValueFields()
            .omittingInsignificantWhitespace()
            .print(message);
        
        return jsonString.getBytes(StandardCharsets.UTF_8);
    }
}
